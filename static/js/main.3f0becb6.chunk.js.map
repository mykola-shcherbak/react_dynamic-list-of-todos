{"version":3,"sources":["components/TodoList/TodoList.jsx","utils/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","onClick","chooseStatus","value","chooseTitle","status","className","onChange","placeholder","map","todo","key","id","classNames","completed","type","readOnly","title","userId","API_URL","CurrentUser","state","user","this","loadData","prevProps","selectedUserId","props","a","fetch","then","response","json","result","data","setState","name","email","phone","Component","App","chooseByTitle","event","target","selectUser","clearUser","clear","filterTodos","filter","toLowerCase","includes","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f0becb6.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({\n  todos,\n  onClick,\n  chooseStatus,\n  value,\n  chooseTitle,\n  status,\n\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <p>Title:</p>\n    <input\n      className=\"input\"\n      value={value}\n      onChange={chooseTitle}\n      placeholder=\"Type here\"\n    />\n    <p>Status:</p>\n    <select\n      value={status}\n      onChange={chooseStatus}\n    >\n      <option value=\"all\">\n        all\n      </option>\n      <option value=\"in process\">\n        active\n      </option>\n      <option value=\"completed\">\n        completed\n      </option>\n    </select>\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={classNames('TodoList__item', {\n              'TodoList__item--unchecked': todo.completed,\n              'TodoList__item--checked': !todo.completed,\n            })}\n          >\n            <label>\n              <input type=\"checkbox\" readOnly />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"TodoList__user-button button\"\n              type=\"button\"\n              onClick={() => onClick(todo.userId)}\n            >\n              {`User ${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      userId: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n  chooseStatus: PropTypes.func.isRequired,\n  chooseTitle: PropTypes.func.isRequired,\n  status: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","const API_URL = 'https://mate-api.herokuapp.com';\n\nexport function getTodos() {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport function getUsersId(userId) {\n  return fetch(`${API_URL}/users/${userId}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import React, { Component } from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUsersId } from '../../utils';\n\nexport class CurrentUser extends Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedUserId !== this.props.selectedUserId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUsersId(this.props.selectedUserId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { onClick } = this.props;\n    const { id, name, email, phone } = user;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${id}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          type=\"button\"\n          className=\"button button--user\"\n          onClick={onClick}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './utils';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    value: '',\n    status: 'all',\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  chooseByTitle = (event) => {\n    this.setState({\n      value: event.target.value,\n    });\n  }\n\n  chooseStatus = (event) => {\n    this.setState({\n      status: event.target.value,\n    });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  clear = () => this.setState({ selectedUserId: 0 });\n\n  selectUser = selectedUserId => this.setState({ selectedUserId });\n\n  filterTodos = (todos) => {\n    const { status, value } = this.state;\n    let result = [...todos];\n\n    if (status === 'completed') {\n      result = todos.filter(todo => todo.completed);\n    }\n\n    if (status === 'in process') {\n      result = todos.filter(todo => !todo.completed);\n    }\n\n    if (value !== '') {\n      result = result.filter(todo => todo.title\n        && todo.title.toLowerCase().includes(value.toLowerCase()));\n    }\n\n    return result;\n  }\n\n  render() {\n    const { todos, selectedUserId, status, value } = this.state;\n    const { filterTodos, selectUser, chooseStatus, chooseByTitle, clearUser }\n    = this;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={filterTodos(todos)}\n            onClick={selectUser}\n            status={status}\n            value={value}\n            chooseStatus={chooseStatus}\n            chooseTitle={chooseByTitle}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId !== 0 ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n                onClick={clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}